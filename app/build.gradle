apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.merseyside.dropletapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        android.defaultConfig.manifestPlaceholders = [
                appAuthRedirectScheme: ""
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            signingConfig signingConfigs.debug

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def fileName = "vpn-release.apk"
                    outputFileName = fileName
                }
            }
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false

            signingConfig signingConfigs.debug

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def fileName = "vpn-debug.apk"
                    outputFileName = fileName
                }
            }
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/',
                            'src/main/res/layouts/fragments',
                            'src/main/res/layouts/activity',
                            'src/main/res/layouts/views',
                    ]
        }
    }
}

ext {
    appcompat = '1.1.0'
    materialDesign = '1.2.0-alpha05'
    constraintLayout = '1.1.3'
    ktxCore = '1.2.0'
    lifecycleExtensions = '2.2.0'
    preferences = '1.1.0'

    dagger2 = '2.26'
    dagger2Compiler = '2.26'

    sqlDriver = '1.1.3'

    cicerone = '5.0.0'

    horizontalSelector = '1.13'
    mvvmCleanArchLibrary = '1.35'

    qrgen = '2.6.0'
    okhttp = '4.4.0'

    firebase = '17.2.3'
    firebaseConfig = '19.1.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':merseylibrary')
    implementation project(":shared")
    implementation project(':openvpn-core')
    implementation project(':library')

    implementation "com.squareup.sqldelight:android-driver:$sqlDriver"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensions"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.core:core-ktx:$ktxCore"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"
    implementation "com.google.android.material:material:$materialDesign"

    implementation "androidx.preference:preference:$preferences"

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.google.dagger:dagger:$dagger2"
    kapt "com.google.dagger:dagger-compiler:$dagger2Compiler"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    implementation "ru.terrakok.cicerone:cicerone:$cicerone"
    implementation "com.github.Merseyside.horizontal-selector-view:HorizontalSelectorView:$horizontalSelector"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization"

    implementation "com.github.kenglxn.QRGen:android:$qrgen"

    implementation "com.google.firebase:firebase-core:$firebase"
    implementation "com.google.firebase:firebase-analytics:$firebase"
    implementation "com.google.firebase:firebase-config:$firebaseConfig"

    //implementation "com.github.Merseyside:mvvm-clean-arch-library:$mvvmCleanArchLibrary"

    implementation "com.squareup.okhttp3:okhttp:$okhttp"
}

apply plugin: 'com.google.gms.google-services'
